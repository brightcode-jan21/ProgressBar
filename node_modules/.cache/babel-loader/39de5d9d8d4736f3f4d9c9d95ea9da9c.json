{"ast":null,"code":"var _jsxFileName = \"/Users/jorge/Flatiron/personal/ProgressBar/src/components/learningModule/LearningModule.js\";\nimport React from 'react';\nimport SelectionBox from '../selectionBox/SelectionBox';\nimport Button from '../button/Button';\nimport Intro from '../intro/Intro';\nimport './Styles.scss';\n\nconst LearningModule = ({\n  setGameStatus,\n  gameStatus\n}) => {\n  const [currentQuestionId, setCurrentQuestionId] = React.useState(0);\n  const [quizData, setQuizData] = React.useState({});\n  const [isComplete, setIsComplete] = React.useState(false);\n  let currentQuestion = quizData.questionArr ? quizData.questionArr[currentQuestionId] : {};\n  React.useEffect(() => {\n    getQuizData();\n  }, []);\n  React.useEffect(() => {\n    console.log(gameStatus);\n  }, [gameStatus]);\n\n  const progressBar = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"learningModule__outerBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"learningModule__innerBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"learningModule__endPoint\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }));\n  };\n\n  const getQuizData = () => {\n    fetch(\"http://localhost:8080/problems\").then(res => {\n      return res.json();\n    }).then(data => {\n      setQuizData(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleSubmit = () => {\n    if (currentQuestionId < quizData.totalQuestions - 1) {\n      console.log(currentQuestionId);\n      setCurrentQuestionId(currentQuestionId + 1);\n    } else if (!isComplete) {\n      setIsComplete(true);\n    } else {\n      setCurrentQuestionId(0);\n      setIsComplete(false);\n      setGameStatus('new');\n    }\n  };\n\n  let possibleAnswers = [];\n\n  if (currentQuestion.possibleAnswers) {\n    possibleAnswers = currentQuestion.possibleAnswers.map((answer, index) => {\n      return /*#__PURE__*/React.createElement(SelectionBox, {\n        id: index,\n        key: index,\n        answer: answer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"learningModule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, progressBar(), currentQuestion.title && !isComplete && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"learningModule__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"learningModule__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, currentQuestion.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"learningModule__subHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, currentQuestion.additionalInfo)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"learningModule__answerArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"learningModule__selections\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, possibleAnswers), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"learningModule__submitButtonContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Submit\",\n    inactive: true,\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })))), isComplete && /*#__PURE__*/React.createElement(Intro, {\n    message: \"Congratulations. You've completed this level!\",\n    buttonLabel: \"Play again\",\n    buttonClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default LearningModule;","map":{"version":3,"sources":["/Users/jorge/Flatiron/personal/ProgressBar/src/components/learningModule/LearningModule.js"],"names":["React","SelectionBox","Button","Intro","LearningModule","setGameStatus","gameStatus","currentQuestionId","setCurrentQuestionId","useState","quizData","setQuizData","isComplete","setIsComplete","currentQuestion","questionArr","useEffect","getQuizData","console","log","progressBar","fetch","then","res","json","data","catch","err","handleSubmit","totalQuestions","possibleAnswers","map","answer","index","title","additionalInfo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SelectionBox from '../selectionBox/SelectionBox';\nimport Button from '../button/Button';\nimport Intro from '../intro/Intro';\n\nimport './Styles.scss';\n\nconst LearningModule = ({setGameStatus, gameStatus}) => {\n  const [currentQuestionId, setCurrentQuestionId] = React.useState(0);\n  const [quizData, setQuizData] = React.useState({});\n  const [isComplete, setIsComplete] = React.useState(false);\n  \n  let currentQuestion = quizData.questionArr ? quizData.questionArr[currentQuestionId]: {};\n  \n  React.useEffect(()=>{\n    getQuizData();\n  },[]);\n\n  React.useEffect(()=>{\n    console.log(gameStatus);\n  },[gameStatus]);\n\n  const progressBar = () => {\n    return(\n        <div className ='learningModule__outerBar'>\n          <div className ='learningModule__innerBar'>\n          </div>\n          <div className='learningModule__endPoint'></div>\n        </div>\n    )\n  }\n\n  const getQuizData=()=>{\n    fetch(\"http://localhost:8080/problems\")\n      .then((res)=>{\n        return res.json();\n      }).then((data)=>{\n        setQuizData(data);\n      }).catch((err)=>{\n        console.log(err);\n      });\n  }\n\n  const handleSubmit=()=> {\n    if(currentQuestionId < quizData.totalQuestions-1){\n      console.log(currentQuestionId)\n      setCurrentQuestionId(currentQuestionId+1);\n    } else if (!isComplete) {\n      setIsComplete(true);\n    } else {\n      setCurrentQuestionId(0);\n      setIsComplete(false);\n      setGameStatus('new');\n    }\n  }\n  let possibleAnswers = [];\n  if(currentQuestion.possibleAnswers){\n    possibleAnswers = currentQuestion.possibleAnswers.map((answer, index) => {\n      return <SelectionBox id={index} key={index} answer={answer} />\n    })\n  }\n\n  return (\n    <div className=\"learningModule\">\n       {progressBar()}\n      { currentQuestion.title && !isComplete &&\n        <>\n          <div className=\"learningModule__header\">\n            <div className=\"learningModule__title\">\n              { currentQuestion.title }\n            </div>\n            <div className=\"learningModule__subHeader\">\n              { currentQuestion.additionalInfo }\n            </div>\n          </div>\n\n          <div className=\"learningModule__answerArea\">\n            <div className=\"learningModule__selections\">\n              { possibleAnswers }\n            </div>\n            <div className=\"learningModule__submitButtonContainer\">\n              <Button label=\"Submit\" inactive handleSubmit={ handleSubmit } />\n            </div>\n          </div>\n        </>\n      }\n      {isComplete &&\n        <Intro message=\"Congratulations. You've completed this level!\" buttonLabel=\"Play again\"  buttonClick={handleSubmit} />\n      }\n    </div>\n  )\n}\n\nexport default LearningModule;\n"]},"metadata":{},"sourceType":"module"}